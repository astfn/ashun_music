{"version":3,"sources":["assets/images/login_bgImg.png","utils/setFormState.js","pages/login/register/style.js","pages/login/register/index.js"],"names":["setFormState","name","stateArr","newVal","index","findIndex","val","setState","login_bgImg","require","default","LoginWrapper","styled","div","ASLogin","props","useState","nickName","setNickName","phone","setPhone","password","FormStates","handelChangeForm","e","target","value","handleRegister","console","log","id","className","onChange","type","placeholder","onClick","withRouter","memo"],"mappings":"6GAAA,OAAe,cAA0B,yC,iCCAlC,SAASA,EAAaC,EAAMC,EAAUC,GAC3C,IAAMC,EAAQF,EAASG,WAAU,SAACC,GAAD,OAASA,EAAIL,OAASA,MACxC,IAAXG,GACJF,EAASE,GAAOG,SAASJ,GAH3B,mC,qFCEMK,EAAcC,EAAQ,KAAmCC,QAElDC,EAAeC,IAAOC,IAAV,64GAGLL,G,gBCAdM,EAAU,SAACC,GACf,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KACMC,EAAa,CACjB,CAAErB,KAAM,WAAYM,SAAUW,GAC9B,CAAEjB,KAAM,QAASM,SAAUa,GAC3B,CAAEnB,KAAM,WAAYM,SAJtB,OAOMgB,EAAmB,SAACC,GACxBxB,YAAawB,EAAEC,OAAOxB,KAAMqB,EAAYE,EAAEC,OAAOC,QAE7CC,EAAiB,WACrBC,QAAQC,IAAIZ,EAAUE,EAAOE,IAoD/B,OACE,cAACV,EAAD,UACE,sBAAKmB,GAAG,WAAR,UACE,2BACA,gDAnDF,iCACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,0BACA,qBAAKA,UAAU,gBAAf,SACE,uBACEL,MAAOT,EACPe,SAAU,SAACR,GAAD,OAAOD,EAAiBC,IAClCS,KAAK,OACLhC,KAAK,WACLiC,YAAY,wCAIlB,sBAAKH,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,gCACA,qBAAKA,UAAU,gBAAf,SACE,uBACEL,MAAOP,EACPa,SAAU,SAACR,GAAD,OAAOD,EAAiBC,IAClCS,KAAK,OACLhC,KAAK,QACLiC,YAAY,8CAIlB,sBAAKH,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,0BACA,qBAAKA,UAAU,gBAAf,SACE,uBACEL,MAAOL,EACPW,SAAU,SAACR,GAAD,OAAOD,EAAiBC,IAClCS,KAAK,WACLhC,KAAK,WACLiC,YAAY,wCAIlB,qBAAKH,UAAU,OAAf,SACE,qBAAKA,UAAU,SAAf,SACE,wBAAQE,KAAK,SAASE,QAASR,EAA/B,uCAmBGS,sBAAWC,eAAKvB","file":"static/js/11.f734497f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login_bgImg.5121d07c.png\";","export function setFormState(name, stateArr, newVal) {\r\n  const index = stateArr.findIndex((val) => val.name === name);\r\n  if (index === -1) return;\r\n  stateArr[index].setState(newVal);\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst login_bgImg = require(\"@/assets/images/login_bgImg.png\").default;\r\n\r\nexport const LoginWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 800px;\r\n  background: url(${login_bgImg}) no-repeat;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n  #loginBox {\r\n    margin: 0 auto;\r\n    margin-top: 200px;\r\n    width: 45%;\r\n    max-width: 500px;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 10px;\r\n    box-shadow: 0px 0px 2px white;\r\n    transition: 0.5s;\r\n    backdrop-filter: blur(3px);\r\n    box-shadow: 0px 0px 30px white;\r\n  }\r\n\r\n  #loginBox > header {\r\n    width: 200px;\r\n    height: 170px;\r\n    margin: 0 auto;\r\n    margin-bottom: 70px;\r\n    background-image: url(\"https://sf3-scmcdn2-tos.pstatp.com/xitu_juejin_web/img/normal.0447fe9.png\");\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    position: absolute;\r\n    transform: translateY(-110%);\r\n  }\r\n  #loginBox:focus-within {\r\n    box-shadow: 0px 0px 50px white;\r\n    transform: translateY(-10px);\r\n  }\r\n  #loginBox:focus-within > header {\r\n    background-image: url(\"https://sf3-scmcdn2-tos.pstatp.com/xitu_juejin_web/img/blindfold.58ce423.png\");\r\n  }\r\n\r\n  #loginBox form {\r\n    margin: 20px 10px;\r\n    min-height: 150px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n  }\r\n  strong {\r\n    margin-top: 45px;\r\n    font-size: 25px;\r\n    color: white;\r\n    text-shadow: 4px 4px 5px var(--color-light), 1px 1px 10px var(--color-deep),\r\n      -1px -1px 10px var(--color-light), -4px -4px 5px var(--color-deep);\r\n\r\n    letter-spacing: 10px;\r\n  }\r\n  .rows {\r\n    flex: 1;\r\n    padding: 5px;\r\n  }\r\n  .label {\r\n    text-align: left;\r\n    color: white;\r\n    text-shadow: 2px 2px 3px var(--color-light), 1px 1px 5px var(--color-deep),\r\n      -1px -1px 5px var(--color-light), -2px -2px 3px var(--color-deep);\r\n  }\r\n  .columns.input,\r\n  input {\r\n    min-width: 200px;\r\n  }\r\n  .columns.input {\r\n    min-height: 35px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    background: white;\r\n  }\r\n  .columns.input::before {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 2px;\r\n    position: absolute;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    background: linear-gradient(\r\n      to right,\r\n      white,\r\n      #f70938,\r\n      #f70938,\r\n      #ffff00,\r\n      #33ff00,\r\n      #00ccff,\r\n      white\r\n    );\r\n    transform: translateX(-100%);\r\n    transition: 0.8s;\r\n  }\r\n  .columns.input:hover::before {\r\n    transform: translateX(0%);\r\n  }\r\n  .columns.input > input {\r\n    height: 33px;\r\n    outline: none;\r\n    border: none;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  .btnBox {\r\n    margin: 0 auto;\r\n    position: relative;\r\n    margin: 10px;\r\n    width: 60px;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n\r\n    button {\r\n      padding: 10px 2px;\r\n      width: 100%;\r\n      height: 100%;\r\n      color: white;\r\n      font-weight: bold;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n\r\n      background: linear-gradient(\r\n        to right,\r\n        var(--color-shallow),\r\n        var(--color-near-white),\r\n        var(--color-middle),\r\n        var(--color-shallow)\r\n      );\r\n      background-size: 200% 100%;\r\n      animation: btnAnimate 1.5s linear infinite;\r\n    }\r\n\r\n    @keyframes btnAnimate {\r\n      100% {\r\n        background-position: -200% 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { memo, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { LoginWrapper } from \"./style.js\";\r\n\r\nimport { setFormState } from \"@/utils/setFormState.js\";\r\n\r\nconst ASLogin = (props) => {\r\n  const [nickName, setNickName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const FormStates = [\r\n    { name: \"nickName\", setState: setNickName },\r\n    { name: \"phone\", setState: setPhone },\r\n    { name: \"password\", setState: setPassword },\r\n  ];\r\n  /* 其他业务 */\r\n  const handelChangeForm = (e) => {\r\n    setFormState(e.target.name, FormStates, e.target.value);\r\n  };\r\n  const handleRegister = () => {\r\n    console.log(nickName, phone, password);\r\n  };\r\n  /* render相关 */\r\n  const renderForm = () => {\r\n    return (\r\n      <form>\r\n        <div className=\"rows\">\r\n          <div className=\"columns label\">昵称</div>\r\n          <div className=\"columns input\">\r\n            <input\r\n              value={nickName}\r\n              onChange={(e) => handelChangeForm(e)}\r\n              type=\"text\"\r\n              name=\"nickName\"\r\n              placeholder=\"请输入昵称\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"rows\">\r\n          <div className=\"columns label\">手机号</div>\r\n          <div className=\"columns input\">\r\n            <input\r\n              value={phone}\r\n              onChange={(e) => handelChangeForm(e)}\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              placeholder=\"请输入手机号\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"rows\">\r\n          <div className=\"columns label\">密码</div>\r\n          <div className=\"columns input\">\r\n            <input\r\n              value={password}\r\n              onChange={(e) => handelChangeForm(e)}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"请输入密码\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"rows\">\r\n          <div className=\"btnBox\">\r\n            <button type=\"button\" onClick={handleRegister}>\r\n              注册\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n  return (\r\n    <LoginWrapper>\r\n      <div id=\"loginBox\">\r\n        <header></header>\r\n        <strong>AshunHotel</strong>\r\n        {renderForm()}\r\n      </div>\r\n    </LoginWrapper>\r\n  );\r\n};\r\n\r\nexport default withRouter(memo(ASLogin));\r\n"],"sourceRoot":""}