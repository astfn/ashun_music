{"version":3,"sources":["services/recommend.js","components/songs-cover/style.js","components/songs-cover/index.js","pages/discover/child-pages/songs/style.js","pages/discover/child-pages/songs/store/actionCreators.js","pages/discover/child-pages/songs/index.js"],"names":["getTopBanners","interface1","url","getHotRecommends","limit","params","getNewAlbums","getTopList","idx","getSettleSingerList","cat","ASSongsCoverWrapper","styled","div","props","width","picUrl","ASSongsCover","imgSize","name","playCount","copywriter","creator","formatImgSize","className","href","onClick","e","preventDefault","formatNumber","nickname","renderSourceText","memo","SongsWrapper","ContentWrapper","getHotRecommendsAction","dispatch","getState","then","data","hotRecommends","result","type","CHANGE_HOT_RECOMMENDS","err","ASSongs","useSelector","state","getIn","shallowEqual","useDispatch","useEffect","presetImg","length","map","item","index","info","id"],"mappings":"4GAAA,sLAEO,SAASA,IACd,OAAOC,YAAW,CAChBC,IAAK,YAGF,SAASC,EAAiBC,GAC/B,OAAOH,YAAW,CAChBC,IAAK,gBACLG,OAAQ,CACND,WAIC,SAASE,EAAaF,GAC3B,OAAOH,YAAW,CAChBC,IAAK,aACLG,OAAQ,CACND,WAKC,SAASG,EAAWC,GACzB,OAAOP,YAAW,CAChBC,IAAK,YACLG,OAAQ,CACNG,SAIC,SAASC,EAAoBL,EAAOM,GACzC,OAAOT,YAAW,CAChBC,IAAK,eACLG,OAAQ,CACND,QACAM,W,8DCnCOC,E,MAAsBC,EAAOC,IAAV,g2CAMnB,SAACC,GAAD,OAAWA,EAAMC,MAAQ,QACxB,SAACD,GAAD,OAAWA,EAAMC,MAAQ,QAGjB,SAACD,GAAD,OAAWA,EAAME,UAC/B,SAACF,GAAD,OAAWA,EAAMC,MAAQ,Q,OCR3BE,EAAe,SAAUH,GAC7B,MAQIA,EAPFC,aADF,MACU,IADV,IAQID,EANFI,eAFF,MAEY,IAFZ,EAGEC,EAKEL,EALFK,KACAC,EAIEN,EAJFM,UACAJ,EAGEF,EAHFE,OACAK,EAEEP,EAFFO,WACAC,EACER,EADFQ,QAMF,OACE,eAACX,EAAD,CACEK,OAAQO,YAAcP,EAAD,UAAYE,EAAZ,YAAuBA,IAC5CH,MAAOA,EAFT,UAIE,sBAAKS,UAAU,MAAf,UACE,mBACEA,UAAU,oBACVC,KAAK,MACLC,QAAS,SAACC,GACRA,EAAEC,kBAJN,SAOG,KAEH,sBAAKJ,UAAU,oBAAf,UACE,iCACE,mBAAGA,UAAU,wBACZK,YAAaT,MAEhB,mBAAGI,UAAU,2BAGjB,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBL,IACxB,sBAAKK,UAAU,eAAf,UACE,sBAAMA,UAAU,UAAhB,kBA9BR,WACE,IAAMM,EAAWR,EAAUA,EAAQQ,SAAW,KAC9C,OAAO,sBAAMN,UAAU,aAAhB,SAA8BH,GAAcS,IA6B5CC,aAOIC,mBAAKf,I,gGCnDPgB,EAAerB,IAAOC,IAAV,8HAKZqB,EAAiBtB,IAAOC,IAAV,4QAQd,SAACC,GAAD,OAAWA,EAAMC,MAAQ,Q,2BCF/B,SAASoB,EAAuB/B,GACrC,OAAO,SAACgC,EAAUC,GAChBlC,YAAiBC,GAAOkC,MACtB,SAACC,GAZA,IAA6BC,EAa5BJ,GAb4BI,EAaCD,EAAKE,OAZjC,CACLC,KAAMC,IACNH,sBAYE,SAACI,GAAD,OAASA,M,WCVTC,EAAU,SAAC/B,GACf,IAAQ0B,EAAkBM,aACxB,SAACC,GAAD,MAAY,CACVP,cAAeO,EAAMC,MAAM,CAAC,QAAS,qBAEvCC,KAJMT,cAMFJ,EAAWc,cACjBC,qBAAU,WACRf,EAASD,EAAuB,QAC/B,CAACC,IAGJ,IAEMgB,EAAY,CAAErC,MAFN,IAEaG,QADX,KAyBhB,OACE,cAACe,EAAD,CAAcT,UAAU,UAAxB,SACE,cAACU,EAAD,2BAAoBkB,GAApB,aAvB2B,IAAzBZ,EAAca,OACT,cAAC,IAAD,IAEFb,EAAcc,KAAI,SAACC,EAAMC,GAC9B,IAAQrC,EAAiDoC,EAAjDpC,KAAMC,EAA2CmC,EAA3CnC,UAAWJ,EAAgCuC,EAAhCvC,OAAQK,EAAwBkC,EAAxBlC,WAAYC,EAAYiC,EAAZjC,QACvCmC,EAAO,CACX1C,MAAOqC,EAAUrC,MACjBG,QAASkC,EAAUlC,QACnBC,OACAC,YACAJ,SACAK,aACAC,WAEF,OACE,qBAAKE,UAAU,QAAf,SACE,cAAC,IAAD,eAAkBiC,KADQF,EAAKG,aAa1B1B,yBAAKa","file":"static/js/9.42fae3e9.chunk.js","sourcesContent":["import { interface1 } from \"./request\";\r\n\r\nexport function getTopBanners() {\r\n  return interface1({\r\n    url: \"/banner\",\r\n  });\r\n}\r\nexport function getHotRecommends(limit) {\r\n  return interface1({\r\n    url: \"/personalized\",\r\n    params: {\r\n      limit,\r\n    },\r\n  });\r\n}\r\nexport function getNewAlbums(limit) {\r\n  return interface1({\r\n    url: \"/top/album\",\r\n    params: {\r\n      limit,\r\n    },\r\n  });\r\n}\r\n\r\nexport function getTopList(idx) {\r\n  return interface1({\r\n    url: \"/top/list\",\r\n    params: {\r\n      idx,\r\n    },\r\n  });\r\n}\r\nexport function getSettleSingerList(limit, cat) {\r\n  return interface1({\r\n    url: \"/artist/list\",\r\n    params: {\r\n      limit,\r\n      cat,\r\n    },\r\n  });\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ASSongsCoverWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .top {\r\n    width: ${(props) => props.width + \"px\"};\r\n    height: ${(props) => props.width + \"px\"};\r\n    position: relative;\r\n    background-color: slateblue;\r\n    background: url(${(props) => props.picUrl}) no-repeat 0px 0px /\r\n      ${(props) => props.width + \"px\"};\r\n\r\n    .mask {\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-position: 0 0;\r\n    }\r\n    .info {\r\n      width: 100%;\r\n      height: 27px;\r\n      position: absolute;\r\n      left: 0px;\r\n      bottom: 0px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      background-position: 0 -537px;\r\n      padding: 0px 10px;\r\n      color: #ccc;\r\n\r\n      .headset {\r\n        display: inline-block;\r\n        margin-right: 5px;\r\n        width: 14px;\r\n        height: 11px;\r\n        background-position: 0 -24px;\r\n      }\r\n      .play {\r\n        width: 16px;\r\n        height: 17px;\r\n        background-position: 0 0;\r\n        cursor: pointer;\r\n        &:hover {\r\n          background-position: 0 -60px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .bottom {\r\n    flex: 1;\r\n    font-size: 14px;\r\n    .name {\r\n      display: block;\r\n      padding: 8px 0px 2px 0px;\r\n    }\r\n    .cover-source {\r\n      font-size: 12px;\r\n      .preText {\r\n        color: #999;\r\n      }\r\n      .sourceText {\r\n        color: #666;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { memo } from \"react\";\r\n\r\nimport { formatNumber, formatImgSize } from \"@/utils/format-utils.js\";\r\nimport { ASSongsCoverWrapper } from \"./style.js\";\r\n\r\nconst ASSongsCover = function (props) {\r\n  const {\r\n    width = 140,\r\n    imgSize = 140,\r\n    name,\r\n    playCount,\r\n    picUrl,\r\n    copywriter,\r\n    creator,\r\n  } = props;\r\n  function renderSourceText() {\r\n    const nickname = creator ? creator.nickname : null;\r\n    return <span className=\"sourceText\">{copywriter || nickname}</span>;\r\n  }\r\n  return (\r\n    <ASSongsCoverWrapper\r\n      picUrl={formatImgSize(picUrl, `${imgSize}x${imgSize}`)}\r\n      width={width}\r\n    >\r\n      <div className=\"top\">\r\n        <a\r\n          className=\"mask sprite_covor\"\r\n          href=\"./#\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          {\"\"}\r\n        </a>\r\n        <div className=\"info sprite_covor\">\r\n          <span>\r\n            <i className=\"sprite_icon headset\"></i>\r\n            {formatNumber(playCount)}\r\n          </span>\r\n          <i className=\"sprite_icon play\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <span className=\"name\">{name}</span>\r\n        <div className=\"cover-source\">\r\n          <span className=\"preText\"> by </span>\r\n          {renderSourceText()}\r\n        </div>\r\n      </div>\r\n    </ASSongsCoverWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(ASSongsCover);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SongsWrapper = styled.div`\r\n  border-left: 2px solid #e1e1e1;\r\n  border-right: 1px solid #d3d3d3;\r\n  background-color: #fff;\r\n`;\r\nexport const ContentWrapper = styled.div`\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n\r\n  .songs {\r\n    width: ${(props) => props.width + \"px\"};\r\n    margin: 0px 30px 30px 0px;\r\n    &:last-of-type {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n`;\r\n","import { CHANGE_HOT_RECOMMENDS } from \"./constants.js\";\r\n\r\nimport { getHotRecommends } from \"@/services/recommend.js\";\r\n\r\nexport function changeHotRecommends(hotRecommends) {\r\n  return {\r\n    type: CHANGE_HOT_RECOMMENDS,\r\n    hotRecommends,\r\n  };\r\n}\r\n\r\n/* 异步请求 */\r\n\r\nexport function getHotRecommendsAction(limit) {\r\n  return (dispatch, getState) => {\r\n    getHotRecommends(limit).then(\r\n      (data) => {\r\n        dispatch(changeHotRecommends(data.result));\r\n      },\r\n      (err) => err\r\n    );\r\n  };\r\n}\r\n","import { memo, useEffect } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport ASSongsCover from \"@/components/songs-cover\";\r\nimport { SongsWrapper, ContentWrapper } from \"./style.js\";\r\nimport ASLoading from \"@/components/loading\";\r\n\r\nimport { getHotRecommendsAction } from \"./store/actionCreators.js\";\r\n\r\nconst ASSongs = (props) => {\r\n  const { hotRecommends } = useSelector(\r\n    (state) => ({\r\n      hotRecommends: state.getIn([\"songs\", \"hotRecommends\"]),\r\n    }),\r\n    shallowEqual\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getHotRecommendsAction(100));\r\n  }, [dispatch]);\r\n\r\n  /* redner 相关 */\r\n  const width = 140;\r\n  const imgSize = 140;\r\n  const presetImg = { width, imgSize };\r\n\r\n  const renderSongs = () => {\r\n    if (hotRecommends.length === 0) {\r\n      return <ASLoading />;\r\n    }\r\n    return hotRecommends.map((item, index) => {\r\n      const { name, playCount, picUrl, copywriter, creator } = item;\r\n      const info = {\r\n        width: presetImg.width,\r\n        imgSize: presetImg.imgSize,\r\n        name,\r\n        playCount,\r\n        picUrl,\r\n        copywriter,\r\n        creator,\r\n      };\r\n      return (\r\n        <div className=\"songs\" key={item.id}>\r\n          <ASSongsCover {...info} />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <SongsWrapper className=\"wrap-v1\">\r\n      <ContentWrapper {...presetImg}>{renderSongs()}</ContentWrapper>\r\n    </SongsWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(ASSongs);\r\n"],"sourceRoot":""}