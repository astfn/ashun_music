{"version":3,"sources":["services/recommend.js","components/albums-cover/style.js","components/albums-cover/index.js","pages/discover/child-pages/new-album/store/actionCreators.js","pages/discover/child-pages/new-album/style.js","pages/discover/child-pages/new-album/index.js"],"names":["getTopBanners","interface1","url","getHotRecommends","limit","params","getNewAlbums","getTopList","idx","getSettleSingerList","cat","ASAlbumsCoverWrapper","styled","div","props","width","imgSize","bgP","ASAlbumsCover","name","picUrl","artist","className","src","formatImgSize","alt","href","onClick","e","preventDefault","memo","getNewAlbumsAction","dispatch","getState","then","data","newAlbums","albums","type","CHANGE_NEW_ALBUMS","err","ASNewAlbumWrapper","ContentWrapper","ASNewAlbum","useSelector","state","getIn","shallowEqual","useDispatch","useEffect","presetImg","length","map","item","indey","itemInfo","id"],"mappings":"4GAAA,sLAEO,SAASA,IACd,OAAOC,YAAW,CAChBC,IAAK,YAGF,SAASC,EAAiBC,GAC/B,OAAOH,YAAW,CAChBC,IAAK,gBACLG,OAAQ,CACND,WAIC,SAASE,EAAaF,GAC3B,OAAOH,YAAW,CAChBC,IAAK,aACLG,OAAQ,CACND,WAKC,SAASG,EAAWC,GACzB,OAAOP,YAAW,CAChBC,IAAK,YACLG,OAAQ,CACNG,SAIC,SAASC,EAAoBL,EAAOM,GACzC,OAAOT,YAAW,CAChBC,IAAK,eACLG,OAAQ,CACND,QACAM,W,8DCnCOC,E,MAAuBC,EAAOC,IAAV,ygBAMpB,SAACC,GAAD,OAAWA,EAAMC,MAAQ,QACxB,SAACD,GAAD,OAAWA,EAAME,QAAU,QAI1B,SAACF,GAAD,OAAWA,EAAME,QAAU,QAC1B,SAACF,GAAD,OAAWA,EAAME,QAAU,QAId,SAACF,GAAD,OAAWA,EAAMG,O,OCbxCC,EAAgB,SAAUJ,GAC9B,MAOIA,EANFC,aADF,MACU,IADV,IAOID,EALFE,eAFF,MAEY,IAFZ,IAOIF,EAJFG,WAHF,MAGQ,WAHR,EAIEE,EAGEL,EAHFK,KACAC,EAEEN,EAFFM,OACAC,EACEP,EADFO,OAEF,OACE,eAACV,EAAD,CAAsBI,MAAOA,EAAOC,QAASA,EAASC,IAAKA,EAA3D,UACE,sBAAKK,UAAU,MAAf,UACE,qBAAKC,IAAKC,YAAcJ,EAAD,UAAYJ,EAAZ,YAAuBA,IAAYS,IAAKN,IAC/D,mBACEG,UAAU,mBACVI,KAAK,KACLC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBAHpB,SAKG,QAGL,sBAAKP,UAAU,SAAf,UACE,sBAAMA,UAAU,wBAAhB,SAAyCH,IACzC,qBAAKG,UAAU,SAAf,SACE,sBAAMA,UAAU,mBAAhB,SAAoCD,EAAOF,gBAOtCW,mBAAKZ,I,8FCvBb,SAASa,EAAmB3B,GACjC,OAAO,SAAC4B,EAAUC,GAChB3B,YAAaF,GAAO8B,MAClB,SAACC,GAZA,IAAyBC,EAaxBJ,GAbwBI,EAaCD,EAAKE,OAZ7B,CACLC,KAAMC,IACNH,kBAYE,SAACI,GAAD,OAASA,M,wBClBFC,EAAoB7B,IAAOC,IAAV,8HAKjB6B,EAAiB9B,IAAOC,IAAV,2QAQd,SAACC,GAAD,OAAWA,EAAMC,MAAQ,Q,gBCLhC4B,EAAa,SAAC7B,GAElB,MAA2B8B,aACzB,SAACC,GAAD,MAAY,CAAET,UAAWS,EAAMC,MAAM,CAAC,WAAY,iBAClDC,KAFMX,iBAAR,MAAoB,GAApB,EAMMJ,EAAWgB,cACjBC,qBAAU,WACRjB,EAASD,EAAmB,QAC3B,CAACC,IAIJ,IAEMkB,EAAY,CAAEnC,MAFN,IAEaC,QADX,KA4BhB,OACE,cAACyB,EAAD,yBAAmBnB,UAAU,WAAc4B,GAA3C,aAzByB,IAArBd,EAAUe,OACL,cAAC,IAAD,IAGP,cAACT,EAAD,UACGN,EAAUgB,KAAI,SAACC,EAAMC,GACpB,IAAQnC,EAAyBkC,EAAzBlC,KAAMC,EAAmBiC,EAAnBjC,OAAQC,EAAWgC,EAAXhC,OAChBkC,EAAW,CACfxC,MAAOmC,EAAUnC,MACjBC,QAASkC,EAAUlC,QACnBG,OACAC,SACAC,UAEF,OACE,qBAAKC,UAAU,OAAf,SACE,cAAC,IAAD,eAAiBiC,KADQF,EAAKG,aAgB7B1B,yBAAKa","file":"static/js/7.08f5548e.chunk.js","sourcesContent":["import { interface1 } from \"./request\";\r\n\r\nexport function getTopBanners() {\r\n  return interface1({\r\n    url: \"/banner\",\r\n  });\r\n}\r\nexport function getHotRecommends(limit) {\r\n  return interface1({\r\n    url: \"/personalized\",\r\n    params: {\r\n      limit,\r\n    },\r\n  });\r\n}\r\nexport function getNewAlbums(limit) {\r\n  return interface1({\r\n    url: \"/top/album\",\r\n    params: {\r\n      limit,\r\n    },\r\n  });\r\n}\r\n\r\nexport function getTopList(idx) {\r\n  return interface1({\r\n    url: \"/top/list\",\r\n    params: {\r\n      idx,\r\n    },\r\n  });\r\n}\r\nexport function getSettleSingerList(limit, cat) {\r\n  return interface1({\r\n    url: \"/artist/list\",\r\n    params: {\r\n      limit,\r\n      cat,\r\n    },\r\n  });\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ASAlbumsCoverWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .top {\r\n    width: ${(props) => props.width + \"px\"};\r\n    height: ${(props) => props.imgSize + \"px\"};\r\n    position: relative;\r\n\r\n    img {\r\n      width: ${(props) => props.imgSize + \"px\"};\r\n      height: ${(props) => props.imgSize + \"px\"};\r\n    }\r\n\r\n    .mask {\r\n      background-position: ${(props) => props.bgP};\r\n    }\r\n  }\r\n  .bottom {\r\n    flex: 1;\r\n    font-size: 12px;\r\n    .albumName {\r\n      display: block;\r\n      padding: 5px 0px 0px 0px;\r\n      width: 100px;\r\n    }\r\n\r\n    .artist {\r\n      .name {\r\n        color: #666;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { memo } from \"react\";\r\n\r\nimport { formatImgSize } from \"@/utils/format-utils.js\";\r\nimport { ASAlbumsCoverWrapper } from \"./style.js\";\r\n\r\nconst ASAlbumsCover = function (props) {\r\n  const {\r\n    width = 118,\r\n    imgSize = 100,\r\n    bgP = \"0 -570px\",\r\n    name,\r\n    picUrl,\r\n    artist,\r\n  } = props;\r\n  return (\r\n    <ASAlbumsCoverWrapper width={width} imgSize={imgSize} bgP={bgP}>\r\n      <div className=\"top\">\r\n        <img src={formatImgSize(picUrl, `${imgSize}x${imgSize}`)} alt={name} />\r\n        <a\r\n          className=\"mask image_cover\"\r\n          href=\"/#\"\r\n          onClick={(e) => e.preventDefault()}\r\n        >\r\n          {\"\"}\r\n        </a>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <span className=\"albumName text-nowrap\">{name}</span>\r\n        <div className=\"artist\">\r\n          <span className=\"name text-nowrap\">{artist.name}</span>\r\n        </div>\r\n      </div>\r\n    </ASAlbumsCoverWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(ASAlbumsCover);\r\n","import { CHANGE_NEW_ALBUMS } from \"./constants.js\";\r\n\r\nimport { getNewAlbums } from \"@/services/recommend.js\";\r\n\r\nexport function changeNewAlbums(newAlbums) {\r\n  return {\r\n    type: CHANGE_NEW_ALBUMS,\r\n    newAlbums,\r\n  };\r\n}\r\n\r\n/* 异步请求 */\r\n\r\nexport function getNewAlbumsAction(limit) {\r\n  return (dispatch, getState) => {\r\n    getNewAlbums(limit).then(\r\n      (data) => {\r\n        dispatch(changeNewAlbums(data.albums));\r\n      },\r\n      (err) => err\r\n    );\r\n  };\r\n}\r\n","import styled from \"styled-components\";\r\nexport const ASNewAlbumWrapper = styled.div`\r\n  border-left: 2px solid #e1e1e1;\r\n  border-right: 1px solid #d3d3d3;\r\n  background-color: #fff;\r\n`;\r\nexport const ContentWrapper = styled.div`\r\n  padding: 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n\r\n  .item {\r\n    width: ${(props) => props.width + \"px\"};\r\n    margin: 0px 30px 30px 0px;\r\n    &:last-of-type {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n`;\r\n","import { memo, useEffect } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AlbumsCover from \"@/components/albums-cover\";\r\nimport { getNewAlbumsAction } from \"./store/actionCreators.js\";\r\n\r\nimport { ASNewAlbumWrapper, ContentWrapper } from \"./style.js\";\r\nimport ASLoading from \"@/components/loading\";\r\n\r\nconst ASNewAlbum = (props) => {\r\n  /*redux*/\r\n  const { newAlbums = [] } = useSelector(\r\n    (state) => ({ newAlbums: state.getIn([\"newAlbum\", \"newAlbums\"]) }),\r\n    shallowEqual\r\n  );\r\n  //将newAlbums进行划分\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getNewAlbumsAction(100));\r\n  }, [dispatch]);\r\n  /*其它hooks*/\r\n  /*视图相关*/\r\n\r\n  const width = 118;\r\n  const imgSize = 100;\r\n  const presetImg = { width, imgSize };\r\n\r\n  const renderContent = (albums) => {\r\n    if (newAlbums.length === 0) {\r\n      return <ASLoading />;\r\n    }\r\n    return (\r\n      <ContentWrapper>\r\n        {newAlbums.map((item, indey) => {\r\n          const { name, picUrl, artist } = item;\r\n          const itemInfo = {\r\n            width: presetImg.width,\r\n            imgSize: presetImg.imgSize,\r\n            name,\r\n            picUrl,\r\n            artist,\r\n          };\r\n          return (\r\n            <div className=\"item\" key={item.id}>\r\n              <AlbumsCover {...itemInfo} />\r\n            </div>\r\n          );\r\n        })}\r\n      </ContentWrapper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ASNewAlbumWrapper className=\"wrap-v1\" {...presetImg}>\r\n      {renderContent()}\r\n    </ASNewAlbumWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(ASNewAlbum);\r\n"],"sourceRoot":""}